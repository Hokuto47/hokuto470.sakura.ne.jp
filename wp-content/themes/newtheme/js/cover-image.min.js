/*! @license cover-image.js ver.0.0.0 Copyright(c) 2016 IMJ Co., Ltd. */
!function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.coverImage = t() : e.coverImage = t()
}(this, function() {
    return function(e) {
        function t(r) {
            if (n[r])
                return n[r].exports;
            var i = n[r] = {
                exports: {},
                id: r,
                loaded: !1
            };
            return e[r].call(i.exports, i, i.exports, t),
            i.loaded = !0,
            i.exports
        }
        var n = {};
        return t.m = e,
        t.c = n,
        t.p = "",
        t(0)
    }([function(e, t, n) {
        "use strict";
        function r() {
            this.elementPairs = []
        }
        function i() {
            var e = new r;
            e.onLoad = e.apply.bind(e),
            e.onResize = e.apply.bind(e),
            e.onOrientationChange = e.apply.bind(e),
            window.coverImage = e,
            window.postMessage(JSON.stringify({
                name: "cover-image",
                event: "load"
            }), p);
            var t = document.querySelectorAll('script[type="application/json"][data-cover-image-json]')
              , n = void 0
              , i = void 0;
            for (n = 0,
            i = t.length; n < i; ++n) {
                var o = JSON.parse(t[n].innerHTML)
                  , s = o.selectorPairs;
                s.forEach(function(t) {
                    var n = t.containerSelector
                      , r = t.targetSelector;
                    e.elementPairs.push({
                        containerElement: document.querySelector(n),
                        targetElement: document.querySelector(r)
                    })
                })
            }
            u(window, "load", e.onLoad, !1),
            u(window, "resize", e.onResize, !1),
            u(window, "orientationchange", e.onOrientationChange, !1),
            window.postMessage(JSON.stringify({
                name: "cover-image",
                event: "loaded"
            }), p)
        }
        var o = n(4)
          , s = o.EventEmitter
          , a = n(2)
          , l = n(5)
          , c = n(1)
          , h = n(3)
          , u = h.on
          , p = n(6).get();
        l(r, s),
        r.prototype.apply = function() {
            var e = this.elementPairs
              , t = void 0
              , n = void 0;
            for (t = 0,
            n = e.length; t < n; ++t) {
                var r = e[t]
                  , i = r.containerElement
                  , o = r.targetElement;
                if (null !== i && null !== o) {
                    var s = c.get({
                        containerWidth: i.scrollWidth,
                        containerHeight: i.scrollHeight,
                        elementWidth: o.naturalWidth || o.scrollWidth,
                        elementHeight: o.naturalHeight || o.scrollHeight
                    });
                    o.style.top = s.top,
                    o.style.left = s.left,
                    o.style.width = s.width,
                    o.style.height = s.height,
                    o.style.marginTop = s.marginTop,
                    o.style.marginLeft = s.marginLeft
                }
            }
        }
        ,
        a(i)
    }
    , function(e, t) {
        "use strict";
        function n(e) {
            var t, n, r, i, o, s, a, l, c = parseFloat(e.elementWidth), h = parseFloat(e.elementHeight), u = parseFloat(e.containerWidth), p = parseFloat(e.containerHeight);
            if (isNaN(c) || isNaN(h))
                throw new Error("elementWidth or elementHeight are NaN");
            if (isNaN(u) || isNaN(p))
                throw new Error("containerWidth or containerHeight are NaN");
            return t = c / h,
            n = u / p,
            t > n ? (o = "auto",
            s = "100%",
            r = 0,
            i = "50%",
            a = 0,
            l = -(p * t) / 2 + "px") : (o = "100%",
            s = "auto",
            r = "50%",
            i = 0,
            a = -(u / t) / 2 + "px",
            l = 0),
            {
                top: r,
                left: i,
                width: o,
                height: s,
                marginTop: a,
                marginLeft: l
            }
        }
        e.exports = {
            get: n
        }
    }
    , function(e, t, n) {
        /*!
	  * domready (c) Dustin Diaz 2014 - License MIT
	  */
        !function(t, n) {
            e.exports = n()
        }("domready", function() {
            var e, t = [], n = document, r = n.documentElement.doScroll, i = "DOMContentLoaded", o = (r ? /^loaded|^c/ : /^loaded|^i|^c/).test(n.readyState);
            return o || n.addEventListener(i, e = function() {
                for (n.removeEventListener(i, e),
                o = 1; e = t.shift(); )
                    e()
            }
            ),
            function(e) {
                o ? setTimeout(e, 0) : t.push(e)
            }
        })
    }
    , function(e, t) {
        "use strict";
        function n(e, t, n, o) {
            var s = function() {
                switch (r(e, t, s, o),
                arguments.length) {
                case 0:
                    return n.call(this);
                case 1:
                    return n.call(this, arguments[0]);
                case 2:
                    return n.call(this, arguments[0], arguments[1]);
                case 3:
                    return n.call(this, arguments[0], arguments[1], arguments[2]);
                default:
                    return n.apply(this, arguments)
                }
            };
            return i(e, t, s, o)
        }
        var r = "undefined" != typeof removeEventListener ? function(e, t, n, r) {
            return e.removeEventListener(t, n, r)
        }
        : function(e, t, n) {
            return e.detachEvent("on" + t, n)
        }
          , i = "undefined" != typeof addEventListener ? function(e, t, n, r) {
            return e.addEventListener(t, n, r)
        }
        : function(e, t, n) {
            return e.attachEvent("on" + t, n)
        }
        ;
        e.exports = {
            off: r,
            on: i,
            once: n
        }
    }
    , function(e, t) {
        function n() {
            this._events = this._events || {},
            this._maxListeners = this._maxListeners || void 0
        }
        function r(e) {
            return "function" == typeof e
        }
        function i(e) {
            return "number" == typeof e
        }
        function o(e) {
            return "object" == typeof e && null !== e
        }
        function s(e) {
            return void 0 === e
        }
        e.exports = n,
        n.EventEmitter = n,
        n.prototype._events = void 0,
        n.prototype._maxListeners = void 0,
        n.defaultMaxListeners = 10,
        n.prototype.setMaxListeners = function(e) {
            if (!i(e) || e < 0 || isNaN(e))
                throw TypeError("n must be a positive number");
            return this._maxListeners = e,
            this
        }
        ,
        n.prototype.emit = function(e) {
            var t, n, i, a, l, c;
            if (this._events || (this._events = {}),
            "error" === e && (!this._events.error || o(this._events.error) && !this._events.error.length)) {
                if (t = arguments[1],
                t instanceof Error)
                    throw t;
                var h = new Error('Uncaught, unspecified "error" event. (' + t + ")");
                throw h.context = t,
                h
            }
            if (n = this._events[e],
            s(n))
                return !1;
            if (r(n))
                switch (arguments.length) {
                case 1:
                    n.call(this);
                    break;
                case 2:
                    n.call(this, arguments[1]);
                    break;
                case 3:
                    n.call(this, arguments[1], arguments[2]);
                    break;
                default:
                    a = Array.prototype.slice.call(arguments, 1),
                    n.apply(this, a)
                }
            else if (o(n))
                for (a = Array.prototype.slice.call(arguments, 1),
                c = n.slice(),
                i = c.length,
                l = 0; l < i; l++)
                    c[l].apply(this, a);
            return !0
        }
        ,
        n.prototype.addListener = function(e, t) {
            var i;
            if (!r(t))
                throw TypeError("listener must be a function");
            return this._events || (this._events = {}),
            this._events.newListener && this.emit("newListener", e, r(t.listener) ? t.listener : t),
            this._events[e] ? o(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t,
            o(this._events[e]) && !this._events[e].warned && (i = s(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners,
            i && i > 0 && this._events[e].length > i && (this._events[e].warned = !0,
            console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[e].length),
            "function" == typeof console.trace && console.trace())),
            this
        }
        ,
        n.prototype.on = n.prototype.addListener,
        n.prototype.once = function(e, t) {
            function n() {
                this.removeListener(e, n),
                i || (i = !0,
                t.apply(this, arguments))
            }
            if (!r(t))
                throw TypeError("listener must be a function");
            var i = !1;
            return n.listener = t,
            this.on(e, n),
            this
        }
        ,
        n.prototype.removeListener = function(e, t) {
            var n, i, s, a;
            if (!r(t))
                throw TypeError("listener must be a function");
            if (!this._events || !this._events[e])
                return this;
            if (n = this._events[e],
            s = n.length,
            i = -1,
            n === t || r(n.listener) && n.listener === t)
                delete this._events[e],
                this._events.removeListener && this.emit("removeListener", e, t);
            else if (o(n)) {
                for (a = s; a-- > 0; )
                    if (n[a] === t || n[a].listener && n[a].listener === t) {
                        i = a;
                        break
                    }
                if (i < 0)
                    return this;
                1 === n.length ? (n.length = 0,
                delete this._events[e]) : n.splice(i, 1),
                this._events.removeListener && this.emit("removeListener", e, t)
            }
            return this
        }
        ,
        n.prototype.removeAllListeners = function(e) {
            var t, n;
            if (!this._events)
                return this;
            if (!this._events.removeListener)
                return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e],
                this;
            if (0 === arguments.length) {
                for (t in this._events)
                    "removeListener" !== t && this.removeAllListeners(t);
                return this.removeAllListeners("removeListener"),
                this._events = {},
                this
            }
            if (n = this._events[e],
            r(n))
                this.removeListener(e, n);
            else if (n)
                for (; n.length; )
                    this.removeListener(e, n[n.length - 1]);
            return delete this._events[e],
            this
        }
        ,
        n.prototype.listeners = function(e) {
            var t;
            return t = this._events && this._events[e] ? r(this._events[e]) ? [this._events[e]] : this._events[e].slice() : []
        }
        ,
        n.prototype.listenerCount = function(e) {
            if (this._events) {
                var t = this._events[e];
                if (r(t))
                    return 1;
                if (t)
                    return t.length
            }
            return 0
        }
        ,
        n.listenerCount = function(e, t) {
            return e.listenerCount(t)
        }
    }
    , function(e, t) {
        "function" == typeof Object.create ? e.exports = function(e, t) {
            e.super_ = t,
            e.prototype = Object.create(t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            })
        }
        : e.exports = function(e, t) {
            e.super_ = t;
            var n = function() {};
            n.prototype = t.prototype,
            e.prototype = new n,
            e.prototype.constructor = e
        }
    }
    , function(e, t) {
        "use strict";
        function n() {
            return r || (r = window.location),
            r.origin || r.protocol + "//" + r.hostname + ("" !== r.port ? ":" + r.port : "")
        }
        var r;
        e.exports = {
            get: n
        }
    }
    ])
});
